<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zA//2Q==
</value>
  </data>
</root>